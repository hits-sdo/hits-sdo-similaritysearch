Backbones:
resnet18 @ 16-128 we know works


9.10.23 resnet101 @ 64 batch size: Crash
Run wmkaw9uw errored: OutOfMemoryError('CUDA out of memory. Tried to allocate 32.00 MiB (GPU 0; 11.00 GiB total capacity; 10.20 GiB already allocated; 0 bytes free; 10.22 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF')
wandb: ERROR Run wmkaw9uw errored: OutOfMemoryError('CUDA out of memory. Tried to allocate 32.00 MiB (GPU 0; 11.00 GiB total capacity; 10.20 GiB already allocated; 0 bytes free; 10.22 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF')


9.10.23 resnet152 @ 128 batch size: Crash
Run gur0d3hy errored: OutOfMemoryError('CUDA out of memory. Tried to allocate 16.00 MiB (GPU 0; 11.00 GiB total capacity; 10.22 GiB already allocated; 0 bytes free; 10.24 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF')
wandb: ERROR Run gur0d3hy errored: OutOfMemoryError('CUDA out of memory. Tried to allocate 16.00 MiB (GPU 0; 11.00 GiB total capacity; 10.22 GiB already allocated; 0 bytes free; 10.24 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF')


9.10.23 resnet50 @ 16 batch size: Works


9.10.23 resnet121 @ 32 batch size: Works


9.10.23 resnet101 @ 32 batch size: Works


9.10.23 resnet 152 @ 48 batch size: Crash
raceback (most recent call last):
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\scripts\model_run.py", line 214, in <module>
    main()
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\scripts\model_run.py", line 210, in main
    train(False)
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\scripts\model_run.py", line 186, in train
    trainer.fit(model, sdo_datamodule.train_dataloader())
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\trainer.py", line 520, in fit
    call._call_and_handle_interrupt(
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\call.py", line 44, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\trainer.py", line 559, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\trainer.py", line 935, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\trainer.py", line 978, in _run_stage
    self.fit_loop.run()
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\fit_loop.py", line 201, in run
    self.advance()
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\fit_loop.py", line 354, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\training_epoch_loop.py", line 133, in run
    self.advance(data_fetcher)
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\training_epoch_loop.py", line 218, in advance
    batch_output = self.automatic_optimization.run(trainer.optimizers[0], kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 185, in run
    self._optimizer_step(kwargs.get("batch_idx", 0), closure)
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 261, in _optimizer_step
    call._call_lightning_module_hook(
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\call.py", line 142, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\core\module.py", line 1265, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\core\optimizer.py", line 158, in step
    step_output = self._strategy.optimizer_step(self._optimizer, closure, **kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\strategies\strategy.py", line 224, in optimizer_step
    return self.precision_plugin.optimizer_step(optimizer, model=model, closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\plugins\precision\precision_plugin.py", line 114, in optimizer_step
    return optimizer.step(closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\optim\optimizer.py", line 280, in wrapper
    out = func(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\optim\optimizer.py", line 33, in _use_grad
    ret = func(self, *args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\optim\sgd.py", line 67, in step
    loss = closure()
           ^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\plugins\precision\precision_plugin.py", line 101, in _wrap_closure
    closure_result = closure()
                     ^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 140, in __call__
    self._result = self.closure(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 126, in closure
    step_output = self._step_fn()
                  ^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 308, in _training_step
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\call.py", line 288, in _call_strategy_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\strategies\strategy.py", line 366, in training_step
    return self.model.training_step(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\model\simCLR.py", line 71, in training_step
    z1 = self.forward(x1)
         ^^^^^^^^^^^^^^^^
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\model\simCLR.py", line 62, in forward
    h = self.backbone(x).flatten(start_dim=1)
        ^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torchvision\models\resnet.py", line 155, in forward
    out = self.bn3(out)
          ^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\batchnorm.py", line 171, in forward
    return F.batch_norm(
           ^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\functional.py", line 2450, in batch_norm
    return torch.batch_norm(
           ^^^^^^^^^^^^^^^^^
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 24.00 MiB (GPU 0; 11.00 GiB total capacity; 10.09 GiB already allocated; 0 bytes free; 10.23 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF


Densenet Error:
Traceback (most recent call last):
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\scripts\model_run.py", line 214, in <module>
    main()
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\scripts\model_run.py", line 210, in main
    train(False)
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\scripts\model_run.py", line 182, in train
    model = SimCLR(args.lr, args.backbone)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\model\simCLR.py", line 51, in __init__
    hidden_dim = feature_extractor.fc.in_features
                 ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\module.py", line 1614, in __getattr__
    raise AttributeError("'{}' object has no attribute '{}'".format(
AttributeError: 'DenseNet' object has no attribute 'fc'

2nd Densenet Error After implementing this code:
    if isinstance(feature_extractor, torchvision.models.ResNet):
        hidden_dim = feature_extractor.fc.in_features
    elif isinstance(feature_extractor, torchvision.models.DenseNet):
        hidden_dim = feature_extractor.classifier.in_features


raceback (most recent call last):
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\scripts\model_run.py", line 214, in <module>
    main()
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\scripts\model_run.py", line 210, in main
    train(False)
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\scripts\model_run.py", line 186, in train
    trainer.fit(model, sdo_datamodule.train_dataloader())
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\trainer.py", line 520, in fit
    call._call_and_handle_interrupt(
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\call.py", line 44, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\trainer.py", line 559, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\trainer.py", line 935, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\trainer.py", line 978, in _run_stage
    self.fit_loop.run()
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\fit_loop.py", line 201, in run
    self.advance()
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\fit_loop.py", line 354, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\training_epoch_loop.py", line 133, in run
    self.advance(data_fetcher)
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\training_epoch_loop.py", line 218, in advance
    batch_output = self.automatic_optimization.run(trainer.optimizers[0], kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 185, in run
    self._optimizer_step(kwargs.get("batch_idx", 0), closure)
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 261, in _optimizer_step
    call._call_lightning_module_hook(
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\call.py", line 142, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\core\module.py", line 1265, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\core\optimizer.py", line 158, in step
    step_output = self._strategy.optimizer_step(self._optimizer, closure, **kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\strategies\strategy.py", line 224, in optimizer_step
    return self.precision_plugin.optimizer_step(optimizer, model=model, closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\plugins\precision\precision_plugin.py", line 114, in optimizer_step
    return optimizer.step(closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\optim\optimizer.py", line 280, in wrapper
    out = func(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\optim\optimizer.py", line 33, in _use_grad
    ret = func(self, *args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\optim\sgd.py", line 67, in step
    loss = closure()
           ^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\plugins\precision\precision_plugin.py", line 101, in _wrap_closure
    closure_result = closure()
                     ^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 140, in __call__
    self._result = self.closure(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 126, in closure
    step_output = self._step_fn()
                  ^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\loops\optimization\automatic.py", line 308, in _training_step
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\trainer\call.py", line 288, in _call_strategy_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\pytorch_lightning\strategies\strategy.py", line 366, in training_step
    return self.model.training_step(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\model\simCLR.py", line 75, in training_step
    z0 = self.forward(x0)
         ^^^^^^^^^^^^^^^^
  File "C:\Projects\HITS-GIBS\Team_Sunflower_Phase_2\hits-sdo-similaritysearch\search_simclr\simclr\model\simCLR.py", line 70, in forward
    z = self.projection_head(h)
        ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\lightly\models\modules\heads.py", line 57, in forward
    return self.layers(x)
           ^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\reop1\miniconda3\envs\sunflower_gpu\Lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: mat1 and mat2 shapes cannot be multiplied (32x16384 and 1024x1024)